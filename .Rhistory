geom_cor(method = "person" , ypos = 100)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse) #Load tidyverse
library(ggplot2) #Load ggplot2
library(stargazer) #Load stargazer
library(SummarizedExperiment) #Load SummariedExperiment
install.packages(SummarizedExperiment)
p3 <- ggplot(cleandf, aes(x = DEPTH_M, y = JOB_COST)) +
geom_point() +
geom_smooth(method = 'lm') +
geom_cor(method = "person" , ypos = 100)
install.packages(c("arm", "backports", "BH", "bitops", "blob", "boot", "brew", "brio", "broom", "cachem", "callr", "class", "cli", "clipr", "cluster", "coefplot", "colorspace", "commonmark", "conquer", "corrplot", "cpp11", "crayon", "credentials", "crosstalk", "curl", "data.table", "DBI", "dbplyr", "desc", "devtools", "diffobj", "digest", "dplyr", "DT", "ellipsis", "evaluate", "fansi", "farver", "forcats", "foreign", "fs", "generics", "gert", "GGally", "ggplot2", "gh", "git2r", "glue", "haven", "highr", "Hmisc", "hms", "htmlTable", "htmltools", "htmlwidgets", "igraph", "interplot", "isoband", "jpeg", "jsonlite", "jtools", "KernSmooth", "knitr", "later", "lavaan", "lifecycle", "lme4", "lubridate", "magick", "magrittr", "mapproj", "maps", "MASS", "Matrix", "MatrixModels", "matrixStats", "memoise", "mgcv", "mime", "MplusAutomation", "nlme", "nloptr", "nnet", "openssl", "packrat", "pander", "pillar", "pkgbuild", "pkgload", "plotly", "processx", "pryr", "ps", "psych", "quantreg", "R6", "rcmdcheck", "Rcpp", "RcppArmadillo", "RCurl", "readr", "remotes", "reprex", "rex", "rlang", "rmarkdown", "roxygen2", "rsconnect", "rversions", "rvest", "semTools", "sessioninfo", "SparseM", "spatial", "srvyr", "stargazer", "statmod", "stringi", "summarytools", "survey", "testthat", "texreg", "tibble", "tidyr", "tidyselect", "tidySEM", "tidyverse", "tinytex", "usethis", "utf8", "vctrs", "viridis", "viridisLite", "waldo", "withr", "xfun", "xml2", "yaml", "zip", "zoo"))
install.packages(c("arm", "backports", "BH", "bitops", "blob", "boot", "brew", "brio", "broom", "cachem", "callr", "class", "cli", "clipr", "cluster", "coefplot", "colorspace", "commonmark", "conquer", "corrplot", "cpp11", "crayon", "credentials", "crosstalk", "curl", "data.table", "DBI", "dbplyr", "desc", "devtools", "diffobj", "digest", "dplyr", "DT", "ellipsis", "evaluate", "fansi", "farver", "forcats", "foreign", "fs", "generics", "gert", "GGally", "ggplot2", "gh", "git2r", "glue", "haven", "highr", "Hmisc", "hms", "htmlTable", "htmltools", "htmlwidgets", "igraph", "interplot", "isoband", "jpeg", "jsonlite", "jtools", "KernSmooth", "knitr", "later", "lavaan", "lifecycle", "lme4", "lubridate", "magick", "magrittr", "mapproj", "maps", "MASS", "Matrix", "MatrixModels", "matrixStats", "memoise", "mgcv", "mime", "MplusAutomation", "nlme", "nloptr", "nnet", "openssl", "packrat", "pander", "pillar", "pkgbuild", "pkgload", "plotly", "processx", "pryr", "ps", "psych", "quantreg", "R6", "rcmdcheck", "Rcpp", "RcppArmadillo", "RCurl", "readr", "remotes", "reprex", "rex", "rlang", "rmarkdown", "roxygen2", "rsconnect", "rversions", "rvest", "semTools", "sessioninfo", "SparseM", "spatial", "srvyr", "stargazer", "statmod", "stringi", "summarytools", "survey", "testthat", "texreg", "tibble", "tidyr", "tidyselect", "tidySEM", "tidyverse", "tinytex", "usethis", "utf8", "vctrs", "viridis", "viridisLite", "waldo", "withr", "xfun", "xml2", "yaml", "zip", "zoo"))
install.packages(c("arm", "backports", "BH", "bitops", "blob", "boot", "brew", "brio", "broom", "cachem", "callr", "class", "cli", "clipr", "cluster", "coefplot", "colorspace", "commonmark", "conquer", "corrplot", "cpp11", "crayon", "credentials", "crosstalk", "curl", "data.table", "DBI", "dbplyr", "desc", "devtools", "diffobj", "digest", "dplyr", "DT", "ellipsis", "evaluate", "fansi", "farver", "forcats", "foreign", "fs", "generics", "gert", "GGally", "ggplot2", "gh", "git2r", "glue", "haven", "highr", "Hmisc", "hms", "htmlTable", "htmltools", "htmlwidgets", "igraph", "interplot", "isoband", "jpeg", "jsonlite", "jtools", "KernSmooth", "knitr", "later", "lavaan", "lifecycle", "lme4", "lubridate", "magick", "magrittr", "mapproj", "maps", "MASS", "Matrix", "MatrixModels", "matrixStats", "memoise", "mgcv", "mime", "MplusAutomation", "nlme", "nloptr", "nnet", "openssl", "packrat", "pander", "pillar", "pkgbuild", "pkgload", "plotly", "processx", "pryr", "ps", "psych", "quantreg", "R6", "rcmdcheck", "Rcpp", "RcppArmadillo", "RCurl", "readr", "remotes", "reprex", "rex", "rlang", "rmarkdown", "roxygen2", "rsconnect", "rversions", "rvest", "semTools", "sessioninfo", "SparseM", "spatial", "srvyr", "stargazer", "statmod", "stringi", "summarytools", "survey", "testthat", "texreg", "tibble", "tidyr", "tidyselect", "tidySEM", "tidyverse", "tinytex", "usethis", "utf8", "vctrs", "viridis", "viridisLite", "waldo", "withr", "xfun", "xml2", "yaml", "zip", "zoo"))
install.packages(c("ggplot2", "tidyverse"))
install.packages(c("ggplot2", "tidyverse"))
library(tidyverse) #Load tidyverse
library(ggplot2) #Load ggplot2
library(stargazer) #Load stargazer
#Load and display pipe fitting jpeg
img1 <- "images/professional-pipe-fitter.jpg"
knitr::include_graphics(img1)
#Load the data set
dfraw = read.csv("data/raw/example.work.orders.csv")
#Check the data is as expected
head(dfraw, 5)
#Check the structure of the data
str(dfraw)
#Output descriptive statistics for all variables
summary(dfraw)
#Remove missing data
dfraw <- na.omit(dfraw)
#Sort data by Diameter
dfraw <- dfraw[order(-dfraw$DIAMETER_MM),]
head(dfraw, 5)
#Remove observations with diameters above maximum set diameter
maximum_diamater <- 10000
cleandf <- subset(dfraw, DIAMETER_MM < maximum_diamater)
#Remove observations with negative values of depth
cleandf <- subset(cleandf, DEPTH_M > 0)
#Convert JOB_TYPE to a factor and add to the dataset
cleandf$JOB_TYPE <- as.factor(cleandf$JOB_TYPE)
#Ensure JOB_TYPE is a factor data type
class(cleandf$JOB_TYPE)
#Convert MATERIAL to a factor and add to the dataset
cleandf$MATERIAL <- as.factor(cleandf$MATERIAL)
#Ensure MATERIAL is a factor data type
class(cleandf$MATERIAL)
#Check the descriptive statistics after cleaning the data
summary(cleandf)
#Create histograms to visualise the continuous variables
variables <- colnames(cleandf[c(3,4,6,7)])
for(i in variables){
hist(cleandf[,i],
xlab = i,
main = c("Histogram of", i),
breaks = sqrt(nrow(cleandf))
)
}
#Create bar charts to visualise the categorical variables
p1 <- ggplot(cleandf, aes(x = JOB_TYPE, fill = JOB_TYPE)) +
geom_bar() +
theme(legend.position = "none") +
labs(y = "Frequency", x = "Job Type") +
ggtitle("Bar chart to show Job Type frequency ")
p1
p2 <- ggplot(cleandf, aes(x = MATERIAL, fill = MATERIAL)) +
geom_bar() +
theme(legend.position = "none") +
labs(y = "Frequency", x = "Material") +
ggtitle("Bar chart to show Material frequency ")
p2
#Plot regression line graph for DEPTH_MM and JOB_COST
p3 <- ggplot(cleandf, aes(x = DEPTH_M, y = JOB_COST)) +
geom_point() +
geom_smooth(method = 'lm')
p3
#Plot regression line graph for DIAMTER_MM and JOB_COST
p4 <- ggplot(cleandf, aes(x = DIAMETER_MM, y = JOB_COST)) +
geom_point() +
geom_smooth(method = 'lm')
p4
#Plot regression line graph for LENGTH_M and JOB_COST
p5 <- ggplot(cleandf, aes(x = LENGTH_M, y = JOB_COST)) +
geom_point() +
geom_smooth(method = 'lm')
p5
p6 <- ggplot(cleandf, aes(x = JOB_TYPE, y = JOB_COST)) +
geom_bar(stat = "identity")
p6
p7 <- ggplot(cleandf, aes(x = MATERIAL, y = JOB_COST)) +
geom_bar(stat = "identity")
p7
#Z transform the continous predictor variables
cleandf$zDEPTH <- (cleandf$DEPTH_M - mean(cleandf$DEPTH_M))/sd(cleandf$DEPTH_M)
cleandf$zDIAMETER <- (cleandf$DIAMETER_MM - mean(cleandf$DIAMETER_MM))/sd(cleandf$DIAMETER_MM)
cleandf$zLENGTH <- (cleandf$LENGTH_M - mean(cleandf$LENGTH_M))/sd(cleandf$LENGTH_M)
#Check variables have been normalised
summary(cleandf)
#Write cleandf
write.table(cleandf, file = paste("cleanData.csv", sep = "/"), sep = ",", row.names = FALSE)
#Multiple regression analysis
JOB_COSTlm <- lm(JOB_COST ~ zDEPTH + zDIAMETER + zLENGTH + JOB_TYPE + MATERIAL, data=cleandf)
#Examine regression analysis
summary(JOB_COSTlm)
#Regression analysis including interactions
JOB_COSTlm2 <- lm(JOB_COST ~ zDEPTH + zDIAMETER + zLENGTH + JOB_TYPE + MATERIAL + zDEPTH:JOB_TYPE + zDIAMETER:JOB_TYPE + zLENGTH:JOB_TYPE, data=cleandf)
#Examine regression analysis
summary(JOB_COSTlm2)
JOB_COSTlm3 <- lm(JOB_COST ~ DEPTH_M + DIAMETER_MM + LENGTH_M + JOB_TYPE + MATERIAL, data=cleandf)
summary(JOB_COSTlm3)
library(tidyverse) #Load tidyverse
library(ggplot2) #Load ggplot2
library(stargazer) #Load stargazer
library(tidyverse) #Load tidyverse
library(ggplot2) #Load ggplot2
library(stargazer) #Load stargazer
#Load and display pipe fitting jpeg
img1 <- "images/professional-pipe-fitter.jpg"
knitr::include_graphics(img1)
#Load the data set
dfraw = read.csv("data/raw/example.work.orders.csv")
#Check the data is as expected
head(dfraw, 5)
#Check the structure of the data
str(dfraw)
#Output descriptive statistics for all variables
summary(dfraw)
#Remove missing data
dfraw <- na.omit(dfraw)
#Sort data by Diameter
dfraw <- dfraw[order(-dfraw$DIAMETER_MM),]
head(dfraw, 5)
#Remove observations with diameters above maximum set diameter
maximum_diamater <- 10000
cleandf <- subset(dfraw, DIAMETER_MM < maximum_diamater)
#Remove observations with negative values of depth
cleandf <- subset(cleandf, DEPTH_M > 0)
#Convert JOB_TYPE to a factor and add to the dataset
cleandf$JOB_TYPE <- as.factor(cleandf$JOB_TYPE)
#Ensure JOB_TYPE is a factor data type
class(cleandf$JOB_TYPE)
#Convert MATERIAL to a factor and add to the dataset
cleandf$MATERIAL <- as.factor(cleandf$MATERIAL)
#Ensure MATERIAL is a factor data type
class(cleandf$MATERIAL)
#Check the descriptive statistics after cleaning the data
summary(cleandf)
#Create histograms to visualise the continuous variables
variables <- colnames(cleandf[c(3,4,6,7)])
for(i in variables){
hist(cleandf[,i],
xlab = i,
main = c("Histogram of", i),
breaks = sqrt(nrow(cleandf))
)
}
#Create bar charts to visualise the categorical variables
p1 <- ggplot(cleandf, aes(x = JOB_TYPE, fill = JOB_TYPE)) +
geom_bar() +
theme(legend.position = "none") +
labs(y = "Frequency", x = "Job Type") +
ggtitle("Bar chart to show Job Type frequency ")
p1
p2 <- ggplot(cleandf, aes(x = MATERIAL, fill = MATERIAL)) +
geom_bar() +
theme(legend.position = "none") +
labs(y = "Frequency", x = "Material") +
ggtitle("Bar chart to show Material frequency ")
p2
#Plot regression line graph for DEPTH_MM and JOB_COST
p3 <- ggplot(cleandf, aes(x = DEPTH_M, y = JOB_COST)) +
geom_point() +
geom_smooth(method = 'lm')
p3
#Plot regression line graph for DIAMTER_MM and JOB_COST
p4 <- ggplot(cleandf, aes(x = DIAMETER_MM, y = JOB_COST)) +
geom_point() +
geom_smooth(method = 'lm')
p4
#Plot regression line graph for LENGTH_M and JOB_COST
p5 <- ggplot(cleandf, aes(x = LENGTH_M, y = JOB_COST)) +
geom_point() +
geom_smooth(method = 'lm')
p5
p6 <- ggplot(cleandf, aes(x = JOB_TYPE, y = JOB_COST)) +
geom_bar(stat = "identity")
p6
p7 <- ggplot(cleandf, aes(x = MATERIAL, y = JOB_COST)) +
geom_bar(stat = "identity")
p7
#Z transform the continous predictor variables
cleandf$zDEPTH <- (cleandf$DEPTH_M - mean(cleandf$DEPTH_M))/sd(cleandf$DEPTH_M)
cleandf$zDIAMETER <- (cleandf$DIAMETER_MM - mean(cleandf$DIAMETER_MM))/sd(cleandf$DIAMETER_MM)
cleandf$zLENGTH <- (cleandf$LENGTH_M - mean(cleandf$LENGTH_M))/sd(cleandf$LENGTH_M)
#Check variables have been normalised
summary(cleandf)
#Write cleandf
write.table(cleandf, file = paste("cleanData.csv", sep = "/"), sep = ",", row.names = FALSE)
#Multiple regression analysis
JOB_COSTlm <- lm(JOB_COST ~ zDEPTH + zDIAMETER + zLENGTH + JOB_TYPE + MATERIAL, data=cleandf)
#Examine regression analysis
summary(JOB_COSTlm)
#Regression analysis including interactions
JOB_COSTlm2 <- lm(JOB_COST ~ zDEPTH + zDIAMETER + zLENGTH + JOB_TYPE + MATERIAL + zDEPTH:JOB_TYPE + zDIAMETER:JOB_TYPE + zLENGTH:JOB_TYPE, data=cleandf)
#Examine regression analysis
summary(JOB_COSTlm2)
#Regression analysis predicting job cost
JOB_COSTlm3 <- lm(JOB_COST ~ DEPTH_M + DIAMETER_MM + LENGTH_M + JOB_TYPE + MATERIAL, data=cleandf)
#Examine regression analysis
summary(JOB_COSTlm3)
install.packages(c("digest", "htmltools"))
library(tidyverse) #Load tidyverse
library(ggplot2) #Load ggplot2
library(stargazer) #Load stargazer
#Load and display pipe fitting jpeg
img1 <- "images/professional-pipe-fitter.jpg"
knitr::include_graphics(img1)
#Load the data set
dfraw = read.csv("data/raw/example.work.orders.csv")
#Check the data is as expected
head(dfraw, 5)
#Check the structure of the data
str(dfraw)
#Output descriptive statistics for all variables
summary(dfraw)
#Remove missing data
dfraw <- na.omit(dfraw)
#Sort data by Diameter
dfraw <- dfraw[order(-dfraw$DIAMETER_MM),]
head(dfraw, 5)
#Remove observations with diameters above maximum set diameter
maximum_diamater <- 10000
cleandf <- subset(dfraw, DIAMETER_MM < maximum_diamater)
#Remove observations with negative values of depth
cleandf <- subset(cleandf, DEPTH_M > 0)
#Convert JOB_TYPE to a factor and add to the dataset
cleandf$JOB_TYPE <- as.factor(cleandf$JOB_TYPE)
#Ensure JOB_TYPE is a factor data type
class(cleandf$JOB_TYPE)
#Convert MATERIAL to a factor and add to the dataset
cleandf$MATERIAL <- as.factor(cleandf$MATERIAL)
#Ensure MATERIAL is a factor data type
class(cleandf$MATERIAL)
#Check the descriptive statistics after cleaning the data
summary(cleandf)
#Create histograms to visualise the continuous variables
variables <- colnames(cleandf[c(3,4,6,7)])
for(i in variables){
hist(cleandf[,i],
xlab = i,
main = c("Histogram of", i),
breaks = sqrt(nrow(cleandf))
)
}
#Create bar charts to visualise the categorical variables
p1 <- ggplot(cleandf, aes(x = JOB_TYPE, fill = JOB_TYPE)) +
geom_bar() +
theme(legend.position = "none") +
labs(y = "Frequency", x = "Job Type") +
ggtitle("Bar chart to show Job Type frequency ")
p1
p2 <- ggplot(cleandf, aes(x = MATERIAL, fill = MATERIAL)) +
geom_bar() +
theme(legend.position = "none") +
labs(y = "Frequency", x = "Material") +
ggtitle("Bar chart to show Material frequency ")
p2
#Plot regression line graph for DEPTH_MM and JOB_COST
p3 <- ggplot(cleandf, aes(x = DEPTH_M, y = JOB_COST)) +
geom_point() +
geom_smooth(method = 'lm')
p3
#Plot regression line graph for DIAMTER_MM and JOB_COST
p4 <- ggplot(cleandf, aes(x = DIAMETER_MM, y = JOB_COST)) +
geom_point() +
geom_smooth(method = 'lm')
p4
#Plot regression line graph for LENGTH_M and JOB_COST
p5 <- ggplot(cleandf, aes(x = LENGTH_M, y = JOB_COST)) +
geom_point() +
geom_smooth(method = 'lm')
p5
p6 <- ggplot(cleandf, aes(x = JOB_TYPE, y = JOB_COST)) +
geom_bar(stat = "identity")
p6
p7 <- ggplot(cleandf, aes(x = MATERIAL, y = JOB_COST)) +
geom_bar(stat = "identity")
p7
#Z transform the continous predictor variables
cleandf$zDEPTH <- (cleandf$DEPTH_M - mean(cleandf$DEPTH_M))/sd(cleandf$DEPTH_M)
cleandf$zDIAMETER <- (cleandf$DIAMETER_MM - mean(cleandf$DIAMETER_MM))/sd(cleandf$DIAMETER_MM)
cleandf$zLENGTH <- (cleandf$LENGTH_M - mean(cleandf$LENGTH_M))/sd(cleandf$LENGTH_M)
#Check variables have been normalised
summary(cleandf)
#Write cleandf
write.table(cleandf, file = paste("cleanData.csv", sep = "/"), sep = ",", row.names = FALSE)
#Multiple regression analysis
JOB_COSTlm <- lm(JOB_COST ~ zDEPTH + zDIAMETER + zLENGTH + JOB_TYPE + MATERIAL, data=cleandf)
#Examine regression analysis
summary(JOB_COSTlm)
#Regression analysis including interactions
JOB_COSTlm2 <- lm(JOB_COST ~ zDEPTH + zDIAMETER + zLENGTH + JOB_TYPE + MATERIAL + zDEPTH:JOB_TYPE + zDIAMETER:JOB_TYPE + zLENGTH:JOB_TYPE, data=cleandf)
#Examine regression analysis
summary(JOB_COSTlm2)
#Regression analysis predicting job cost
JOB_COSTlm3 <- lm(JOB_COST ~ DEPTH_M + DIAMETER_MM + LENGTH_M + JOB_TYPE + MATERIAL, data=cleandf)
#Examine regression analysis
summary(JOB_COSTlm3)
remove.packages("htmltools", lib="~/R/win-library/4.0")
install.packages("htmltools")
install.packages("htmltools")
library(tidyverse) #Load tidyverse
library(ggplot2) #Load ggplot2
library(stargazer) #Load stargazer
#Load and display pipe fitting jpeg
img1 <- "images/professional-pipe-fitter.jpg"
knitr::include_graphics(img1)
#Load the data set
dfraw = read.csv("data/raw/example.work.orders.csv")
#Check the data is as expected
head(dfraw, 5)
#Check the structure of the data
str(dfraw)
#Output descriptive statistics for all variables
summary(dfraw)
#Remove missing data
dfraw <- na.omit(dfraw)
#Sort data by Diameter
dfraw <- dfraw[order(-dfraw$DIAMETER_MM),]
head(dfraw, 5)
#Remove observations with diameters above maximum set diameter
maximum_diamater <- 10000
cleandf <- subset(dfraw, DIAMETER_MM < maximum_diamater)
#Remove observations with negative values of depth
cleandf <- subset(cleandf, DEPTH_M > 0)
#Convert JOB_TYPE to a factor and add to the dataset
cleandf$JOB_TYPE <- as.factor(cleandf$JOB_TYPE)
#Ensure JOB_TYPE is a factor data type
class(cleandf$JOB_TYPE)
#Convert MATERIAL to a factor and add to the dataset
cleandf$MATERIAL <- as.factor(cleandf$MATERIAL)
#Ensure MATERIAL is a factor data type
class(cleandf$MATERIAL)
#Check the descriptive statistics after cleaning the data
summary(cleandf)
#Create histograms to visualise the continuous variables
variables <- colnames(cleandf[c(3,4,6,7)])
for(i in variables){
hist(cleandf[,i],
xlab = i,
main = c("Histogram of", i),
breaks = sqrt(nrow(cleandf))
)
}
#Create bar charts to visualise the categorical variables
p1 <- ggplot(cleandf, aes(x = JOB_TYPE, fill = JOB_TYPE)) +
geom_bar() +
theme(legend.position = "none") +
labs(y = "Frequency", x = "Job Type") +
ggtitle("Bar chart to show Job Type frequency ")
p1
p2 <- ggplot(cleandf, aes(x = MATERIAL, fill = MATERIAL)) +
geom_bar() +
theme(legend.position = "none") +
labs(y = "Frequency", x = "Material") +
ggtitle("Bar chart to show Material frequency ")
p2
#Plot regression line graph for DEPTH_MM and JOB_COST
p3 <- ggplot(cleandf, aes(x = DEPTH_M, y = JOB_COST)) +
geom_point() +
geom_smooth(method = 'lm')
p3
#Plot regression line graph for DIAMTER_MM and JOB_COST
p4 <- ggplot(cleandf, aes(x = DIAMETER_MM, y = JOB_COST)) +
geom_point() +
geom_smooth(method = 'lm')
p4
#Plot regression line graph for LENGTH_M and JOB_COST
p5 <- ggplot(cleandf, aes(x = LENGTH_M, y = JOB_COST)) +
geom_point() +
geom_smooth(method = 'lm')
p5
p6 <- ggplot(cleandf, aes(x = JOB_TYPE, y = JOB_COST)) +
geom_bar(stat = "identity")
p6
p7 <- ggplot(cleandf, aes(x = MATERIAL, y = JOB_COST)) +
geom_bar(stat = "identity")
p7
#Z transform the continous predictor variables
cleandf$zDEPTH <- (cleandf$DEPTH_M - mean(cleandf$DEPTH_M))/sd(cleandf$DEPTH_M)
cleandf$zDIAMETER <- (cleandf$DIAMETER_MM - mean(cleandf$DIAMETER_MM))/sd(cleandf$DIAMETER_MM)
cleandf$zLENGTH <- (cleandf$LENGTH_M - mean(cleandf$LENGTH_M))/sd(cleandf$LENGTH_M)
#Check variables have been normalised
summary(cleandf)
#Write cleandf
write.table(cleandf, file = paste("cleanData.csv", sep = "/"), sep = ",", row.names = FALSE)
#Multiple regression analysis
JOB_COSTlm <- lm(JOB_COST ~ zDEPTH + zDIAMETER + zLENGTH + JOB_TYPE + MATERIAL, data=cleandf)
#Examine regression analysis
summary(JOB_COSTlm)
#Regression analysis including interactions
JOB_COSTlm2 <- lm(JOB_COST ~ zDEPTH + zDIAMETER + zLENGTH + JOB_TYPE + MATERIAL + zDEPTH:JOB_TYPE + zDIAMETER:JOB_TYPE + zLENGTH:JOB_TYPE, data=cleandf)
#Examine regression analysis
summary(JOB_COSTlm2)
#Regression analysis predicting job cost
JOB_COSTlm3 <- lm(JOB_COST ~ DEPTH_M + DIAMETER_MM + LENGTH_M + JOB_TYPE + MATERIAL, data=cleandf)
#Examine regression analysis
summary(JOB_COSTlm3)
library(tidyverse) #Load tidyverse
library(ggplot2) #Load ggplot2
library(stargazer) #Load stargazer
#Load and display pipe fitting jpeg
img1 <- "images/professional-pipe-fitter.jpg"
knitr::include_graphics(img1)
#Load the data set
dfraw = read.csv("data/raw/example.work.orders.csv")
#Check the data is as expected
head(dfraw, 5)
#Check the structure of the data
str(dfraw)
#Output descriptive statistics for all variables
summary(dfraw)
#Remove missing data
dfraw <- na.omit(dfraw)
#Sort data by Diameter
dfraw <- dfraw[order(-dfraw$DIAMETER_MM),]
head(dfraw, 5)
#Remove observations with diameters above maximum set diameter
maximum_diamater <- 10000
cleandf <- subset(dfraw, DIAMETER_MM < maximum_diamater)
#Remove observations with negative values of depth
cleandf <- subset(cleandf, DEPTH_M > 0)
#Convert JOB_TYPE to a factor and add to the dataset
cleandf$JOB_TYPE <- as.factor(cleandf$JOB_TYPE)
#Ensure JOB_TYPE is a factor data type
class(cleandf$JOB_TYPE)
#Convert MATERIAL to a factor and add to the dataset
cleandf$MATERIAL <- as.factor(cleandf$MATERIAL)
#Ensure MATERIAL is a factor data type
class(cleandf$MATERIAL)
#Check the descriptive statistics after cleaning the data
summary(cleandf)
#Create histograms to visualise the continuous variables
variables <- colnames(cleandf[c(3,4,6,7)])
for(i in variables){
hist(cleandf[,i],
xlab = i,
main = c("Histogram of", i),
breaks = sqrt(nrow(cleandf))
)
}
#Create bar charts to visualise the categorical variables
p1 <- ggplot(cleandf, aes(x = JOB_TYPE, fill = JOB_TYPE)) +
geom_bar() +
theme(legend.position = "none") +
labs(y = "Frequency", x = "Job Type") +
ggtitle("Bar chart to show Job Type frequency ")
p1
p2 <- ggplot(cleandf, aes(x = MATERIAL, fill = MATERIAL)) +
geom_bar() +
theme(legend.position = "none") +
labs(y = "Frequency", x = "Material") +
ggtitle("Bar chart to show Material frequency ")
p2
#Plot regression line graph for DEPTH_MM and JOB_COST
p3 <- ggplot(cleandf, aes(x = DEPTH_M, y = JOB_COST)) +
geom_point() +
geom_smooth(method = 'lm')
p3
#Plot regression line graph for DIAMTER_MM and JOB_COST
p4 <- ggplot(cleandf, aes(x = DIAMETER_MM, y = JOB_COST)) +
geom_point() +
geom_smooth(method = 'lm')
p4
#Plot regression line graph for LENGTH_M and JOB_COST
p5 <- ggplot(cleandf, aes(x = LENGTH_M, y = JOB_COST)) +
geom_point() +
geom_smooth(method = 'lm')
p5
p6 <- ggplot(cleandf, aes(x = JOB_TYPE, y = JOB_COST)) +
geom_bar(stat = "identity")
p6
p7 <- ggplot(cleandf, aes(x = MATERIAL, y = JOB_COST)) +
geom_bar(stat = "identity")
p7
#Z transform the continous predictor variables
cleandf$zDEPTH <- (cleandf$DEPTH_M - mean(cleandf$DEPTH_M))/sd(cleandf$DEPTH_M)
cleandf$zDIAMETER <- (cleandf$DIAMETER_MM - mean(cleandf$DIAMETER_MM))/sd(cleandf$DIAMETER_MM)
cleandf$zLENGTH <- (cleandf$LENGTH_M - mean(cleandf$LENGTH_M))/sd(cleandf$LENGTH_M)
#Check variables have been normalised
summary(cleandf)
#Write cleandf
write.table(cleandf, file = paste("cleanData.csv", sep = "/"), sep = ",", row.names = FALSE)
#Multiple regression analysis
JOB_COSTlm <- lm(JOB_COST ~ zDEPTH + zDIAMETER + zLENGTH + JOB_TYPE + MATERIAL, data=cleandf)
#Examine regression analysis
summary(JOB_COSTlm)
#Regression analysis including interactions
JOB_COSTlm2 <- lm(JOB_COST ~ zDEPTH + zDIAMETER + zLENGTH + JOB_TYPE + MATERIAL + zDEPTH:JOB_TYPE + zDIAMETER:JOB_TYPE + zLENGTH:JOB_TYPE, data=cleandf)
#Examine regression analysis
summary(JOB_COSTlm2)
#Regression analysis predicting job cost
JOB_COSTlm3 <- lm(JOB_COST ~ DEPTH_M + DIAMETER_MM + LENGTH_M + JOB_TYPE + MATERIAL, data=cleandf)
#Examine regression analysis
summary(JOB_COSTlm3)
Job Cost = (2.673 * 3876) + (600 * 75.89) + (25.13 * 182.2) + (1 * 8170) + (0 * -40.52) + (0 * -34.74) - 20550
JobCost = (2.673 * 3876) + (600 * 75.89) + (25.13 * 182.2) + (1 * 8170) + (0 * -40.52) + (0 * -34.74) - 20550
JobCost = (2.673 * 3876) + (600 * 75.89) + (25.13 * 182.2) + (1 * 8170) + (0 * -40.52) + (0 * -34.74) - 20550
summary(JobCost)
JobCost = (2.673 * 3876) + (600 * 75.89) + (25.13 * 182.2) + (1 * 8170) + (0 * -40.52) + (0 * -34.74) - 20550
JobCost
